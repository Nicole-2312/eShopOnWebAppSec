#NAME THE PIPELINE SAME AS FILE (WITHOUT ".yml")
trigger:
   branches:
     include:
     - main
   paths:
     include:
     - src/web/*

resources:
  repositories:
    - repository: self
      trigger: none

stages:
- stage: Build
  displayName: Build .Net Core Solution
  jobs:
  - job: Build
    pool:
      name: AdminNico-AP
      demands: Agent.Name -equals AdminNico
      
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        feedsToUse: 'select'
        
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
    
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: 'tests/UnitTests/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: Integration Tests
      inputs:
        command: 'test'
        projects: 'tests/IntegrationTests/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: Functional Tests
      inputs:
        command: 'test'
        projects: 'tests/FunctionalTests/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-o $(Build.ArtifactStagingDirectory)'
    
    - task: PublishPipelineArtifact@1
      displayName: Publish Artifacts ADO - Website
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'Website'
        publishLocation: 'pipeline'
     
    #- task: PublishPipelineArtifact@1
     # displayName: Publish Artifacts ADO - Bicep
      #inputs:
       # targetPath: '$(Build.SourcesDirectory)/infra/webapp.bicep'
        #artifact: 'Bicep'
        #publishLocation: 'pipeline'

    - task: SonarQubePrepare@7
      inputs:
        SonarQube: 'AppSecNico-SQCon'
        scannerMode: 'dotnet'
        projectKey: 'squ_2d280969690c7d49f39a012795a19f3892d6301c'
        projectName: 'AppSecNico'

    - task: SonarQubePublish@7
      inputs:
        pollingTimeoutSec: '300'

    - task: SonarQubeAnalyze@7
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
  

#- stage: Deploy
#   displayName: Deploy to an Azure Web App
#  jobs:
#  - deployment: Deploy
#    environment: approvals
#    pool:
#      name: eShopOnWebSelfPool
#      demands: Agent.Name -equals eShopOnWebSelfAgent
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#            - task: DownloadBuildArtifacts@1
#              inputs:
#                buildType: 'current'
#                downloadType: 'specific'
#                downloadPath: '$(Build.ArtifactStagingDirectory)'
    
#            - task: AzureRmWebAppDeployment@5
#              inputs:
#                ConnectionType: 'AzureRM'
#                azureSubscription: 'Azure Connection'
#                appType: 'webApp'
#                WebAppName: 'Web-App-2'
#                packageForLinux: '$(Build.ArtifactStagingDirectory)/**/Web.zip'
#                AppSettings: '-UseOnlyInMemoryDatabase true -ASPNETCORE_ENVIRONMENT Development'
